import{_ as a,c as i,o as e,ax as t}from"./chunks/framework.WypII07u.js";const n="/check-updates.png",g=JSON.parse('{"title":"检查更新","description":"","frontmatter":{},"headers":[],"relativePath":"guide/check-updates.md","filePath":"guide/check-updates.md"}'),h={name:"guide/check-updates.md"};function l(p,s,d,k,r,c){return e(),i("div",null,[...s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/check-updates.md for this page in Markdown format</div><h1 id="检查更新" tabindex="-1">检查更新 <a class="header-anchor" href="#检查更新" aria-label="Permalink to &quot;检查更新&quot;">​</a></h1><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>在应用配置中设置：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> globalSettings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  app: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 是否开启检查更新</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@默认值</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> \`false\`</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    enableCheckUpdates: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>效果如下：</p><p><img src="`+n+'" alt="" data-zoomable=""></p><h2 id="自定义检查更新" tabindex="-1">自定义检查更新 <a class="header-anchor" href="#自定义检查更新" aria-label="Permalink to &quot;自定义检查更新&quot;">​</a></h2><p>框架默认采用轮询请求 <code>index.html</code>，并获取响应头中的 <code>etag</code> 或 <code>last-modified</code> 作为版本标识的方法来判断页面是否有更新。</p><p>你也可以修改 <code>/src/ui/components/KpuCheckUpdates/index.vue</code> 文件中的 <code>getVersionTag</code> 方法，实现自定义检查更新。</p>',10)])])}const u=a(h,[["render",l]]);export{g as __pageData,u as default};
