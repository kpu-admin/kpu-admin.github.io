import{_ as d,c as e,o as a,ax as o}from"./chunks/framework.WypII07u.js";const p=JSON.parse('{"title":"KpuScrollArea 滚动区域","description":"","frontmatter":{},"headers":[],"relativePath":"components/ka-scroll-area.md","filePath":"components/ka-scroll-area.md"}'),r={name:"components/ka-scroll-area.md"};function l(n,t,c,s,h,i){return a(),e("div",null,[...t[0]||(t[0]=[o('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /components/ka-scroll-area.md for this page in Markdown format</div><h1 id="kpuscrollarea-滚动区域" tabindex="-1">KpuScrollArea 滚动区域 <a class="header-anchor" href="#kpuscrollarea-滚动区域" aria-label="Permalink to &quot;KpuScrollArea 滚动区域&quot;">​</a></h1><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>horizontal</td><td>是否水平</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>scrollbar</td><td>是否显示滚动条</td><td><code>boolean</code></td><td><code>true</code></td></tr><tr><td>mask</td><td>是否显示遮罩</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>gradientColor</td><td>遮罩渐变颜色，会从透明渐变到遮罩颜色</td><td><code>string</code></td><td><code>&#39;hsl(var(--background))&#39;</code></td></tr><tr><td>class</td><td>自定义类名</td><td><code>string</code></td><td>-</td></tr><tr><td>contentClass</td><td>内容自定义类名</td><td><code>string</code></td><td>-</td></tr></tbody></table><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>onScroll</td><td>滚动事件</td><td><code>(e) =&gt; void</code></td></tr></tbody></table><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认插槽</td></tr></tbody></table>',8)])])}const u=d(r,[["render",l]]);export{p as __pageData,u as default};
